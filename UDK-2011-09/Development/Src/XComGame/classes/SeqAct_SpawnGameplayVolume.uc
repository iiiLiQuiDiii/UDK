/*******************************************************************************
 * SeqAct_SpawnGameplayVolume generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class SeqAct_SpawnGameplayVolume extends SequenceAction
    hidecategories(Object)
    forcescriptorder(true)
	dependson(XGTacticalGameCoreData);

//var Actor ShooterOrSpawnPoint;
// Vector SpawnLocation;
var() XGTacticalGameCoreData.EVolumeType VolumeType;
//var Actor SpawnedVolume;

// function XComUnitPawnNativeBase GetActiveUnitPawn()
// {
    // local XComTacticalController kTacticalController;

    
    // foreach GetWorldInfo().AllControllers(class'XComTacticalController', kTacticalController)
    // {
        
        // if(kTacticalController.GetActiveUnitPawn() != none)
        // {            
            // return kTacticalController.GetActiveUnitPawn();
           
            // continue;
        // }        
        // return none;        
    // }    
    // return none;
    
// }

// event Activated()
// {
    // local XGUnit shooter;
    // local XGAbility_GameCore Ability;
    // local array<XGUnit> DummyTargets;
    // local XComUnitPawn UnitPawn;
    // local SeqVar_Object SeqVar;

    // DummyTargets.Length = 0;
    
    // if(ShooterOrSpawnPoint != none)
    // {
        
        // if(XComSpawnPoint(ShooterOrSpawnPoint) != none)
        // {
            // shooter = XGUnit(XComSpawnPoint(ShooterOrSpawnPoint).m_kLastActorSpawned);
        // }
       
        // else
        // {
           
            // if(XComUnitPawn(ShooterOrSpawnPoint) != none)
            // {
                // shooter = XGUnit(XComUnitPawn(ShooterOrSpawnPoint).GetGameUnit());
            // }
        // }
    // }
   
    // if(shooter == none)
    // {
        // UnitPawn = XComUnitPawn(GetActiveUnitPawn());
        
        // if(UnitPawn != none)
        // {
            // shooter = XGUnit(UnitPawn.GetGameUnit());
        // }
    // }
   
    // if(shooter != none)
    // {
        // Ability = XGAbility_GameCore(XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.m_kAbilities.SpawnAbility(23, shooter, DummyTargets, none));
        // Ability.m_vTargetLocation = SpawnLocation;
        // SpawnedVolume = XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.m_kAbilities.CreateVolume(Ability);
        
        // foreach LinkedVariables(class'SeqVar_Object', SeqVar, "Spawned Volume")
        // {
            // SeqVar.SetObjectValue(SpawnedVolume);            
        // }        
    // }
    
// }

defaultproperties
{
    VolumeType=EVolumeType.eVolume_Fire
    bCallHandler=false
    VariableLinks(0)=(ExpectedType=Class'Engine.SeqVar_Vector',LinkDesc="Location of XGVolume",PropertyName=SpawnLocation)
    VariableLinks(1)=(ExpectedType=Class'Engine.SeqVar_Object',LinkDesc="Shooter or Spawn Point",PropertyName=ShooterOrSpawnPoint)
    VariableLinks(2)=(ExpectedType=Class'Engine.SeqVar_Object',LinkDesc="Spawned Volume",PropertyName=SpawnedVolume,bWriteable=true)
    ObjName="Spawn Gameplay Volume"
}