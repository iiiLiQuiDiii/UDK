/*******************************************************************************
 * XGGameData generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class XGGameData extends Object
    native
    config(GameData);

const FLCONTINENT_NORTHAMERICA = 1;
const FLCONTINENT_SOUTHAMERICA = 2;
const FLCONTINENT_EUROPE = 4;
const FLCONTINENT_ASIA = 8;
const FLCONTINENT_AFRICA = 16;

enum EDifficultyLevel
{
    eDifficulty_Easy,
    eDifficulty_Normal,
    eDifficulty_Hard,
    eDifficulty_Classic,
    eDifficulty_MAX
};

enum EGameplayOption
{
    eGO_RandomDamage,
    eGO_RandomFunding,
    eGO_RandomRookieStats,
    eGO_RandomStatProgression,
    eGO_WoundsAffectStats,
    eGO_CritOnFlank,
    eGO_InterrogateForPsi,
    eGO_Marathon,
    eGO_PanicAffectsFunding,
    eGO_VariableAbductionRewards,
    eGO_EscalatingSatelliteCosts,
    eGO_UltraRarePsionics,
    eGO_DecliningFunding,
    eGO_DegradingElerium,
    eGO_LoseGearOnDeath,
    eGO_MorePower,
    eGO_MAX
};

enum EFoundryTech
{
    eFoundry_None,
    eFoundry_SHIV,
    eFoundry_AlienGrenades,
    eFoundry_MedikitII,
    eFoundry_ArcThrowerII,
    eFoundry_VehicleRepair,
    eFoundry_AutomatedLasers,
    eFoundry_AutomatedPlasma,
    eFoundry_SHIV_Heal,
    eFoundry_CaptureDrone,
    eFoundry_AmmoConservation,
    eFoundry_AdvancedFlight,
    eFoundry_AdvancedConstruction,
    eFoundry_PistolI,
    eFoundry_PistolII,
    eFoundry_PistolIII,
    eFoundry_SHIVSuppression,
    eFoundry_StealthSatellites,
    eFoundry_Scope,
    eFoundry_MAX
};

enum EResearchCredits
{
    eResearchCredit_None,
    eResearchCredit_Weapons_I,
    eResearchCredit_PlasmaWeapons,
    eResearchCredit_AllWeapons,
    eResearchCredit_Armor_I,
    eResearchCredit_AllArmor,
    eResearchCredit_UFOTech,
    eResearchCredit_Flight,
    eResearchCredit_Psionics,
    eResearchCredit_AllTech,
    eResearchCredit_MAX
};

enum EOTSTech
{
    eOTS_None,
    eOTS_SquadSize_I,
    eOTS_SquadSize_II,
    eOTS_XP_II,
    eOTS_HP_I,
    eOTS_HP_II,
    eOTS_XP_I,
    eOTS_Will_I,
    eOTS_MAX
};

enum ETechType
{
    eTech_None,
    eTech_Xenobiology,
    eTech_ArcThrower,
    eTech_BaseShard,
    eTech_PsiLabs,
    eTech_Firestorm,
    eTech_AutopsySectoidCommander,
    eTech_Hyperwave,
    eTech_PsiLink,
    eTech_WeaponFragments,
    eTech_AlienMaterials,
    eTech_Exp_Warfare,
    eTech_Elerium,
    eTech_PsiArmor,
    eTech_Armor_Carapace,
    eTech_Armor_Skeleton,
    eTech_Armor_Titan,
    eTech_Armor_Ghost,
    eTech_Armor_ArchAngel,
    eTech_LaserWeapons,
    eTech_PrecisionLasers,
    eTech_HeavyLasers,
    eTech_Plasma_Pistol,
    eTech_Plasma_Light,
    eTech_Plasma_Rifle,
    eTech_Plasma_Heavy,
    eTech_Plasma_Sniper,
    eTech_Alloy_Cannon,
    eTech_Plasma_Cannon,
    eTech_Fusion_Launcher,
    eTech_BlasterLauncher,
    eTech_AlienNavigation,
    eTech_UFOPowerSource,
    eTech_EMP,
    eTech_InterrogateSectoid,
    eTech_InterrogateFloater,
    eTech_InterrogateMuton,
    eTech_InterrogateSectoidCommander,
    eTech_InterrogateBerserker,
    eTech_InterrogateThinMan,
    eTech_InterrogateHeavyFloater,
    eTech_InterrogateMutonElite,
    eTech_InterrogateEthereal,
    eTech_AutopsySectoid,
    eTech_AutopsyFloater,
    eTech_AutopsyThinMan,
    eTech_AutopsyMuton,
    eTech_AutopsyCryssalid,
    eTech_AutopsyZombie,
    eTech_AutopsyCyberdisc,
    eTech_AutopsyBerserker,
    eTech_AutopsyHeavyFloater,
    eTech_AutopsyMutonElite,
    eTech_AutopsyDrone,
    eTech_AutopsySectopod,
    eTech_AutopsyEthereal,
    eTech_Placeholder,
    eTech_MAX
};

enum ERecapStats
{
    eRecap_None,
    eRecap_Days,
    eRecap_Score,
    eRecap_AvgShotPctCount,
    eRecap_AvgShotPctSum,
    eRecap_AvgDmgCount,
    eRecap_AvgDmgSum,
    eRecap_AvgNumTurnsCount,
    eRecap_AvgNumTurnsSum,
    eRecap_Missions,
    eRecap_MissionsWon,
    eRecap_MissionsLost,
    eRecap_SoldiersLost,
    eRecap_SoldiersHired,
    eRecap_OTSTechs,
    eRecap_FirstColonel,
    eRecap_FavoriteClass,
    eRecap_DaysInInfirmary,
    eRecap_PsiSoldiers,
    eRecap_FundingCountries,
    eRecap_CountriesLost,
    eRecap_ContinentBonuses,
    eRecap_ContinentsCovered,
    eRecap_SatellitesLaunched,
    eRecap_SatellitesLost,
    eRecap_SecondSatellite,
    eRecap_ThirdSatellite,
    eRecap_FirstContinent,
    eRecap_FundingReceived,
    eRecap_GreyMarketFunding,
    eRecap_FCFunding,
    eRecap_ScientistsCollected,
    eRecap_EngineersCollected,
    eRecap_SoldiersCollected,
    eRecap_UFOsShotDown,
    eRecap_InterceptorsLost,
    eRecap_InterceptorsHired,
    eRecap_FirestormsBuilt,
    eRecap_EngagementsAborted,
    eRecap_AimConsumablesUsed,
    eRecap_DodgeConsumablesUsed,
    eRecap_TrackConsumablesUsed,
    eRecap_MoneyEarned,
    eRecap_MoneySpent,
    eRecap_AlloysRecovered,
    eRecap_EleriumRecovered,
    eRecap_AlloysUsed,
    eRecap_EleriumUsed,
    eRecap_Scientists,
    eRecap_LabsBuilt,
    eRecap_TechsResearched,
    eRecap_AvgTechDaysCount,
    eRecap_AvgTechDaysSum,
    eRecap_DifferentAliensCaptured,
    eRecap_Engineers,
    eRecap_WorkshopsBuilt,
    eRecap_ItemsBuilt,
    eRecap_SHIVsBuilt,
    eRecap_FoundryTechs,
    eRecap_MedikitsBuilt,
    eRecap_ArcThrowersBuilt,
    eRecap_FacilitiesBuilt,
    eRecap_FacilitiesRemoved,
    eRecap_MaxPower,
    eRecap_MaxAdjacencies,
    eRecap_ObjInterrogateAlien,
    eRecap_ObjResearchOutsiderShards,
    eRecap_ObjCollectShards,
    eRecap_ObjAssaultBase,
    eRecap_ObjBuildHyperwave,
    eRecap_ObjRecoverPsiLink,
    eRecap_ObjBuildGollop,
    eRecap_ObjChooseVolunteer,
    eRecap_FirstPsi,
    eRecap_FirstAlienWeapon,
    eRecap_FirstFirestorm,
    eRecap_FirstCarapace,
    eRecap_FirstLaser,
    eRecap_FirstTitan,
    eRecap_FirstBlaster,
    eRecap_FirstSkeleton,
    eRecap_FirstPsiArmor,
    eRecap_FirstGhost,
    eRecap_FirstIntLaser,
    eRecap_FirstIntPlasma,
    eRecap_FirstIntEMP,
    eRecap_FirstIntFusion,
    eRecap_DaysSurvived,
    eRecap_FirstMissionLost,
    eRecap_FirstMissionLostDays,
    eRecap_FirstFiveSoldierMission,
    eRecap_FirstSixSoldierMission,
    eRecap_SoldierNamesCustomized,
    eRecap_SoldierLooksCustomized,
    eRecap_MaxSoldiers,
    eRecap_MaxLeveledSoldiers,
    eRecap_StartingContinent,
    eRecap_OneShotKills,
    eRecap_AIOneShotKills,
    eRecap_AliensKilled,
    eRecap_AliensKilledFromExplosives,
    eRecap_ContinentsWon,
    eRecap_FirestormLaunch,
    eRecap_InterceptorLaunch,
    eRecap_GamesSubmitted,
    eRecap_IronmanGames,
    eRecap_TutorialGames,
    eRecap_SnipersOnMissions,
    eRecap_AssaultsOnMissions,
    eRecap_HeaviesOnMissions,
    eRecap_SupportsOnMissions,
    eRecap_UplinksBuilt,
    eRecap_NexiiBuilt,
    eRecap_ThermoBuilt,
    eRecap_EleriumPowerBuilt,
    eRecap_GeneratorBuilt,
    eRecap_NorthAmericaStarts,
    eRecap_SouthAmericaStarts,
    eRecap_AfricaStarts,
    eRecap_EuropeStarts,
    eRecap_AsiaStarts,
    eRecap_NorthAmericaBonuses,
    eRecap_SouthAmericaBonuses,
    eRecap_AfricaBonuses,
    eRecap_EuropeBonuses,
    eRecap_AsiaBonuses,
    eRecap_MAX
};

enum EProfileStats
{
    eProfile_NewGameCount,
    eProfile_TutorialComplete,
    eProfile_HighestDifficultyPlayed,
    eProfile_PreferredVolume,
    eProfile_WonGameFronNorthAmerica,
    eProfile_FLContinentsWonFrom,
    eProfile_AliensKilled,
    eProfile_AliensKilledFromExplosions,
    eProfile_GamesCompleted,
    eProfile_EasyGamesCompleted,
    eProfile_NormalGamesCompleted,
    eProfile_HardGamesCompleted,
    eProfile_ClassicGamesCompleted,
    eProfile_UFOsShotDown,
    eProfile_MAX
};

enum EPlayerEndTurnType
{
    ePlayerEndTurnType_TurnNotOver,
    ePlayerEndTurnType_PlayerInput,
    ePlayerEndTurnType_TimerExpired,
    ePlayerEndTurnType_AllUnitsDone,
    ePlayerEndTurnType_AI,
    ePlayerEndTurnType_MAX
};

enum ENumPlayers
{
    ENumPlayers,
    ENumPlayers1,
    ENumPlayers2,
    ENumPlayers3,
    ENumPlayers_MAX
};

enum ETerrainTypes
{
    eTerrain_Rock,
    eTerrain_RockSteam,
    eTerrain_Open,
    eTerrain_Excavated,
    eTerrain_ExcavatedSteam,
    eTerrain_Facility,
    eTerrain_ExcavatedAccessLift,
    eTerrain_MAX
};

enum EFacilityType
{
    eFacility_None,
    eFacility_Hangar,
    eFacility_MissionControl,
    eFacility_Barracks,
    eFacility_Research,
    eFacility_Engineering,
    eFacility_AccessLift,
    eFacility_ScienceLab,
    eFacility_Workshop,
    eFacility_SmallRadar,
    eFacility_Power,
    eFacility_Foundry,
    eFacility_OTS,
    eFacility_AlienContain,
    eFacility_LargeRadar,
    eFacility_ThermalPower,
    eFacility_EleriumGenerator,
    eFacility_PsiLabs,
    eFacility_HyperwaveRadar,
    eFacility_DeusEx,
    eFacility_GreyMarket,
    eFacility_SitRoom,
    eFacility_MAX
};

enum EShipType
{
    eShip_None,
    eShip_Interceptor,
    eShip_Skyranger,
    eShip_Firestorm,
    eShip_UFOSmallScout,
    eShip_UFOLargeScout,
    eShip_UFOAbductor,
    eShip_UFOSupply,
    eShip_UFOBattle,
    eShip_UFOEthereal,
    eShip_MAX
};

enum EMissionType
{
    eMission_None,
    eMission_SP_START,
    eMission_Abduction,
    eMission_Crash,
    eMission_LandedUFO,
    eMission_HQAssault,
    eMission_AlienBase,
    eMission_TerrorSite,
    eMission_Final,
    eMission_Special,
    eMission_DLC,
    eMission_SP_END,
    eMission_MP_START,
    eMission_MPDeathmatch,
    eMission_MPControl,
    eMission_MP_END,
    eMission_Strategy,
    eMission_ReturnToBase,
    eMission_All,
    eMission_MAX
};

enum EFCMissionType
{
    eFCMType_None,
    eFCMType_Assault,
    eFCMType_Bomb,
    eFCMType_Extraction,
    eFCMType_Rescue,
    eFCMType_Campaign,
    eFCMType_MAX
};

enum EMissionTime
{
    eMissionTime_None,
    eMissionTime_Night,
    eMissionTime_Day,
    eMissionTime_DuskDawn,
    eMissionTime_MAX
};

enum EMissionRegion
{
    eMissionRegion_None,
    eMissionRegion_Any,
    eMissionRegion_NorthAmerica,
    eMissionRegion_Europe,
    eMissionRegion_Asia,
    eMissionRegion_SouthHemi,
    eMissionRegion_MAX
};

enum EItemType
{
    eItem_NONE,
    eItem_BEGIN_WEAPONS,
    eItem_Pistol,
    eItem_AssaultRifle,
    eItem_Shotgun,
    eItem_LMG,
    eItem_SniperRifle,
    eItem_RocketLauncher,
    eItem_LaserPistol,
    eItem_LaserAssaultRifle,
    eItem_LaserAssaultGun,
    eItem_HeavyLaser,
    eItem_LaserSniperRifle,
    eItem_PlasmaPistol,
    eItem_PlasmaLightRifle,
    eItem_PlasmaAssaultRifle,
    eItem_AlloyCannon,
    eItem_HeavyPlasma,
    eItem_PlasmaSniperRifle,
    eItem_BlasterLauncher,
    eItem_FlameThrower,
    eItem_PlaceholderWeapon0,
    eItem_PlaceholderWeapon1,
    eItem_PlaceholderWeapon2,
    eItem_PlaceholderWeapon3,
    eItem_PlaceholderWeapon4,
    eItem_PlaceholderWeapon5,
    eItem_PlaceholderWeapon6,
    eItem_PlaceholderWeapon7,
    eItem_BEGIN_SPECIAL_WEAPONS,
    eItem_SectopodArm,
    eItem_SectopodCannon,
    eItem_SectopodHeatRay,
    eItem_ChryssalidClaw,
    eItem_DroneBeam,
    eItem_PsiAmp,
    eItem_Grapple,
    eItem_CyberdiscWeapon,
    eItem_BEGIN_ALIEN_SHARED_WEAPONS,
    eItem_SectoidPlasmaPistol,
    eItem_PlasmaLightRifle_ThinMan,
    eItem_PlasmaLightRifle_Floater,
    eItem_PlasmaLightRifle_Muton,
    eItem_PlasmaAssaultRifle_Muton,
    eItem_HeavyPlasma_Floater,
    eItem_HeavyPlasma_Muton,
    eItem_END_ALIEN_SHARED_WEAPONS,
    eItem_ZombieFist,
    eItem_ElderWeapon,
    eItem_MutonBlade,
    eItem_OutsiderWeapon,
    eItem_SoldierNoWeapon,
    eItem_Plague,
    eItem_SectopodClusterBomb,
    eItem_END_SPECIAL_WEAPONS,
    eItem_END_WEAPONS,
    eItem_BEGIN_ARMOR,
    eItem_ArmorKevlar,
    eItem_ArmorCarapace,
    eItem_ArmorSkeleton,
    eItem_ArmorTitan,
    eItem_ArmorArchangel,
    eItem_ArmorGhost,
    eItem_ArmorPsi,
    eItem_DLCArmor0,
    eItem_DLCArmor1,
    eItem_DLCArmor2,
    eItem_DLCArmor3,
    eItem_DLCArmor4,
    eItem_DLCArmor5,
    eItem_DLCArmor6,
    eItem_DLCArmor7,
    eItem_PlaceholderArmor0,
    eItem_PlaceholderArmor1,
    eItem_END_ARMOR,
    eItem_BEGIN_ITEMS,
    eItem_Medikit,
    eItem_CombatStims,
    eItem_MindShield,
    eItem_ChitinPlating,
    eItem_ArcThrower,
    eItem_TargetingModule,
    eItem_ReinforcedArmor,
    eItem_END_ITEMS,
    eItem_BEGIN_GRENADES,
    eItem_FragGrenade,
    eItem_SmokeGrenade,
    eItem_FlashBang,
    eItem_AlienGrenade,
    eItem_PlaceholderGrenade0,
    eItem_PlaceholderGrenade1,
    eItem_BEGIN_ALIEN_GRENADES,
    eItem_SectoidGrenade,
    eItem_FloaterGrenade,
    eItem_MutonGrenade,
    eItem_CyberdiscGrenade,
    eItem_ThinManGrenade,
    eItem_END_ALIEN_GRENADES,
    eItem_PsiGrenade,
    eItem_BattleScanner,
    eItem_END_GRENADES,
    eItem_BEGIN_VEHICLES,
    eItem_SHIV,
    eItem_SHIV_Alloy,
    eItem_SHIV_Hover,
    eItem_Interceptor,
    eItem_Firestorm,
    eItem_Skyranger,
    eItem_Satellite,
    eItem_PlaceholderVehicle0,
    eItem_PlaceholderVehicle1,
    eItem_END_VEHICLES,
    eItem_BEGIN_VEHICLE_UPGRADES,
    eItem_ShivMinigun,
    eItem_ShivSentry,
    eItem_ShivLaser,
    eItem_ShivPlasma,
    eItem_SHIVDeck_I,
    eItem_SHIVDeck_II,
    eItem_SHIVDeck_III,
    eItem_PlaceholderShivUpgrade0,
    eItem_PlaceholderShivUpgrade1,
    eItem_BEGIN_SHIP_WEAPONS,
    eItem_IntWeap_I,
    eItem_IntWeap_II,
    eItem_IntWeap_III,
    eItem_IntWeap_IV,
    eItem_IntWeap_V,
    eItem_IntWeap_VI,
    eItem_PlaceholderIntWeapon0,
    eItem_PlaceholderIntWeapon1,
    eItem_END_SHIP_WEAPONS,
    eItem_BEGIN_INTERCEPTOR_CONSUMABLES,
    eItem_IntConsumable_Dodge,
    eItem_IntConsumable_Boost,
    eItem_IntConsumable_Hit,
    eItem_PlaceholderIntConsumable0,
    eItem_PlaceholderIntConsumable1,
    eItem_END_INTERCEPTOR_CONSUMABLES,
    eItem_END_VEHICLE_UPGRADES,
    eItem_BEGIN_CORPSES,
    eItem_CivilianCorpse,
    eItem_TankCorpse,
    eItem_SoldierCorpse,
    eItem_SectoidCorpse,
    eItem_SectoidCommanderCorpse,
    eItem_FloaterCorpse,
    eItem_FloaterHeavyCorpse,
    eItem_ThinManCorpse,
    eItem_MutonCorpse,
    eItem_MutonEliteCorpse,
    eItem_BerserkerCorpse,
    eItem_CyberdiscCorpse,
    eItem_EtherealCorpse,
    eItem_CryssalidCorpse,
    eItem_ZombieCorpse,
    eItem_SectopodCorpse,
    eItem_DroneCorpse,
    eItem_END_CORPSES,
    eItem_BEGIN_CAPTIVES,
    eItem_SectoidCaptive,
    eItem_SectoidCommanderCaptive,
    eItem_FloaterCaptive,
    eItem_FloaterHeavyCaptive,
    eItem_ThinManCaptive,
    eItem_MutonCaptive,
    eItem_MutonEliteCaptive,
    eItem_BerserkerCaptive,
    eItem_EtherealCaptive,
    eItem_END_CAPTIVES,
    eItem_BEGIN_COLLECTIBLES,
    eItem_Elerium115,
    eItem_AlienAlloys,
    eItem_WeaponFragment,
    eItem_AlienEntertainment,
    eItem_AlienFood,
    eItem_AlienStasisTank,
    eItem_UFONavigation,
    eItem_AlienSurgery,
    eItem_UFOPowerSource,
    eItem_HyperwaveBeacon,
    eItem_DamagedAlienEntertainment,
    eItem_DamagedAlienFood,
    eItem_DamagedAlienStasisTank,
    eItem_DamagedUFONavigation,
    eItem_DamagedAlienSurgery,
    eItem_DamagedUFOPowerSource,
    eItem_DamagedHyperwaveBeacon,
    eItem_UFOFusionLauncher,
    eItem_PsiLink,
    eItem_END_COLLECTIBLES,
    eItem_Base_Shard,
    eItem_Skeleton_Key,
    eItem_SectopodChestCannon,
    eItem_NullPrereq,
    eItem_MAX
};

enum EUnitType
{
    UNIT_TYPE_Soldier,
    UNIT_TYPE_Tank,
    UNIT_TYPE_Alien,
    UNIT_TYPE_AlienInUFO,
    UNIT_TYPE_Loot,
    UNIT_TYPE_Animal,
    UNIT_TYPE_Civilian,
    UNIT_TYPE_Player,
    UNIT_TYPE_MPTeamOne,
    UNIT_TYPE_MPTeamTwo,
    UNIT_TYPE_MAX
};

enum ECountry
{
    eCountry_USA,
    eCountry_Russia,
    eCountry_China,
    eCountry_UK,
    eCountry_Germany,
    eCountry_France,
    eCountry_Japan,
    eCountry_India,
    eCountry_Australia,
    eCountry_Italy,
    eCountry_SouthKorea,
    eCountry_Turkey,
    eCountry_Indonesia,
    eCountry_Spain,
    eCountry_Pakistan,
    eCountry_Canada,
    eCountry_Iran,
    eCountry_Israel,
    eCountry_Egypt,
    eCountry_Brazil,
    eCountry_Argentina,
    eCountry_Mexico,
    eCountry_SouthAfrica,
    eCountry_SaudiArabia,
    eCountry_Ukraine,
    eCountry_Nigeria,
    eCountry_Venezuela,
    eCountry_Greece,
    eCountry_Columbia,
    eCountry_Portugal,
    eCountry_Sweden,
    eCountry_Ireland,
    eCountry_Scotland,
    eCountry_Norway,
    eCountry_Netherlands,
    eCountry_Belgium,
    eCountry_MAX
};

enum ECursorType
{
    eXGCursor_Standard,
    eXGCursor_Rifle,
    eXGCursor_Rocket,
    eXGCursor_Sniper,
    eXGCursor_Laser,
    eXGCursor_Grenade,
    eXGCursor_Plasma,
    eXGCursor_FlameThrower,
    eXGCursor_ArcThrower,
    eXGCursor_Shotgun,
    eXGCursor_TakeCover,
    eXGCursor_Cover,
    eXGCursor_Overwatch,
    eXGCursor_Flush,
    eXGCursor_Medkit,
    eXGCursor_ReloadRocket,
    eXGCursor_None,
    eXGCursor_Total,
    eXGCursor_MAX
};

enum EContinent
{
    eContinent_NorthAmerica,
    eContinent_SouthAmerica,
    eContinent_Europe,
    eContinent_Asia,
    eContinent_Africa,
    eContinent_MAX
};

enum ESalvageType
{
    eSalvage_NONE,
    eSalvage_Food,
    eSalvage_Supplies,
    eSalvage_Alloys,
    eSalvage_Elerium,
    eSalvage_Web,
    eSalvage_Item,
    eSalvage_END,
    eSalvage_MAX
};

enum ECardinalDirection
{
    CardinalDirection_North,
    CardinalDirection_South,
    CardinalDirection_East,
    CardinalDirection_West,
    CardinalDirection_Rand,
    CardinalDirection_MAX
};

enum ECharacter
{
    eChar_None,
    eChar_Civilian,
    eChar_Soldier,
    eChar_Tank,
    eChar_Sectoid,
    eChar_Floater,
    eChar_Thinman,
    eChar_Muton,
    eChar_Cyberdisc,
    eChar_SectoidCommander,
    eChar_FloaterHeavy,
    eChar_MutonElite,
    eChar_Ethereal,
    eChar_Chryssalid,
    eChar_Zombie,
    eChar_MutonBerserker,
    eChar_Sectopod,
    eChar_Drone,
    eChar_Outsider,
    eChar_EtherealUber,
    eChar_BattleScanner,
    eChar_MAX
};

enum EPawnType
{
    ePawnType_None,
    ePawnType_HUMAN_START,
    ePawnType_FemaleLevelILight_UNUSED,
    ePawnType_Female_2_Skeleton,
    ePawnType_Female_3_Ghost,
    ePawnType_Female_1_Kevlar,
    ePawnType_Female_2_Carapace,
    ePawnType_Female_3_Titan,
    ePawnType_Female_3_Archangel,
    ePawnType_FemaleLevelIIHeavy_UNUSED,
    ePawnType_FemaleLevelIIIHeavy_UNUSED,
    ePawnType_FemalePsi,
    ePawnType_MaleLevelILight_UNUSED,
    ePawnType_Male_2_Skeleton,
    ePawnType_Male_3_Ghost,
    ePawnType_Male_1_Kevlar,
    ePawnType_Male_2_Carapace,
    ePawnType_Male_3_Titan,
    ePawnType_Male_3_Archangel,
    ePawnType_MaleLevelIIHeavy_UNUSED,
    ePawnType_MaleLevelIIIHeavy_UNUSED,
    ePawnType_MalePsi,
    ePawnType_HUMAN_END,
    ePawnType_Tank,
    ePawnType_Tank2,
    ePawnType_Tank3,
    ePawnType_Civilian,
    ePawnType_ALIEN_START,
    ePawnType_Sectoid,
    ePawnType_Sectoid_Commander,
    ePawnType_Floater,
    ePawnType_Floater_Heavy,
    ePawnType_Muton,
    ePawnType_Muton_Elite,
    ePawnType_Muton_Berserker,
    ePawnType_ThinMan,
    ePawnType_Elder,
    ePawnType_CyberDisc,
    ePawnType_Reaper,
    ePawnType_Chryssalid,
    ePawnType_Sectopod,
    ePawnType_SectopodDrone,
    ePawnType_Zombie,
    ePawnType_Outsider,
    ePawnType_EtherealUber,
    ePawnType_ALIEN_END,
    ePawnType_BattleScanner,
    ePawnType_Max
};

enum EMaterialType
{
    MaterialType_Default,
    MaterialType_Wood,
    MaterialType_Grass,
    MaterialType_Dirt,
    MaterialType_Water,
    MaterialType_Metal,
    MaterialType_ShallowWater,
    MaterialType_HumanFlesh,
    MaterialType_AlienFlesh,
    MaterialType_Foliage,
    MaterialType_Masonry,
    MaterialType_Cloth,
    MaterialType_Glass,
    MaterialType_Hay,
    MaterialType_Garbage,
    MaterialType_GroceryProduce,
    MaterialType_GroceryBoxes,
    MaterialType_GroceryCans,
    MaterialType_AsphaltTarRoof,
    MaterialType_WoodAndGlass,
    MaterialType_Mud,
    MaterialType_Plastic,
    MaterialType_MachineHuman,
    MaterialType_MachineAlien,
    MaterialType_Gravel,
    MaterialType_MAX
};

enum ELoadoutTypes
{
    eLoadout_Empty,
    eLoadout_Random,
    eLoadout_HUMAN_BEGIN,
    eLoadout_Pistolier,
    eLoadout_Rifleman,
    eLoadout_LaserRifleman,
    eLoadout_Shotgunner,
    eLoadout_Flamethrower,
    eLoadout_ArcThrower,
    eLoadout_Sniper,
    eLoadout_Sniper_Laser,
    eLoadout_Rocketman,
    eLoadout_Rocketman_Laser,
    eLoadout_Spotter,
    eLoadout_Spotter_Laser,
    eLoadout_Medic,
    eLoadout_Minigunner,
    eLoadout_HeavyLaser,
    eLoadout_ShivMini,
    eLoadout_ShivSentry,
    eLoadout_Shiv2Laser,
    eLoadout_Shiv3Plasma,
    eLoadout_WeaponlessVIP,
    eLoadout_HUMAN_END,
    eLoadout_ALIEN_BEGIN,
    eLoadout_Sectoid,
    eLoadout_Sectoid_Commander,
    eLoadout_Floater,
    eLoadout_Floater_Heavy,
    eLoadout_Chryssalid,
    eLoadout_Chryssalid_Juvenile,
    eLoadout_Sectopod,
    eLoadout_Sectopod_Mini,
    eLoadout_Muton,
    eLoadout_Muton_Berserker,
    eLoadout_Muton_Commander,
    eLoadout_Muton_Elite,
    eLoadout_Cyberdisc,
    eLoadout_ThinMan,
    eLoadout_Elder,
    eLoadout_SectopodDrone,
    eLoadout_Zombie,
    eLoadout_Outsider,
    eLoadout_Muton_LightPlasma,
    eLoadout_EtherealUber,
    eLoadout_ALIEN_END,
    eLoadout_Total,
    eLoadout_Invalid,
    eLoadout_MAX
};

enum EArmorClass
{
    eClass_None,
    eClass_Light,
    eClass_Medium,
    eClass_Heavy,
    eClass_Invalid,
    eClass_MAX
};

enum EArmorLevel
{
    eLevel_None,
    eLevel_I,
    eLevel_II,
    eLevel_III,
    eLevel_Invalid,
    eLevel_MAX
};

enum EArmorKit
{
    eKit_None,
    eKit_AssaultRifle_Kevlar,
    eKit_AssaultRifle_Skeleton,
    eKit_AssaultRifle_Carapace,
    eKit_AssaultRifle_Ghost,
    eKit_AssaultRifle_Titan,
    eKit_Shotgun_Kevlar,
    eKit_Shotgun_Skeleton,
    eKit_Shotgun_Carapace,
    eKit_Shotgun_Ghost,
    eKit_Shotgun_Titan,
    eKit_LMG_Kevlar,
    eKit_LMG_Skeleton,
    eKit_LMG_Carapace,
    eKit_LMG_Ghost,
    eKit_LMG_Titan,
    eKit_SniperRifle_Kevlar,
    eKit_SniperRifle_Skeleton,
    eKit_SniperRifle_Carapace,
    eKit_SniperRifle_Ghost,
    eKit_SniperRifle_Titan,
    eKit_LaserAssaultRifle_Kevlar,
    eKit_LaserAssaultRifle_Skeleton,
    eKit_LaserAssaultRifle_Carapace,
    eKit_LaserAssaultRifle_Ghost,
    eKit_LaserAssaultRifle_Titan,
    eKit_HeavyLaser_Kevlar,
    eKit_HeavyLaser_Skeleton,
    eKit_HeavyLaser_Carapace,
    eKit_HeavyLaser_Ghost,
    eKit_HeavyLaser_Titan,
    eKit_LaserSniperRifle_Kevlar,
    eKit_LaserSniperRifle_Skeleton,
    eKit_LaserSniperRifle_Carapace,
    eKit_LaserSniperRifle_Ghost,
    eKit_LaserSniperRifle_Titan,
    eKit_PlasmaLightRifle_Kevlar,
    eKit_PlasmaLightRifle_Skeleton,
    eKit_PlasmaLightRifle_Carapace,
    eKit_PlasmaLightRifle_Ghost,
    eKit_PlasmaLightRifle_Titan,
    eKit_PlasmaAssaultRifle_Kevlar,
    eKit_PlasmaAssaultRifle_Skeleton,
    eKit_PlasmaAssaultRifle_Carapace,
    eKit_PlasmaAssaultRifle_Ghost,
    eKit_PlasmaAssaultRifle_Titan,
    eKit_AlloyCannon_Kevlar,
    eKit_AlloyCannon_Skeleton,
    eKit_AlloyCannon_Carapace,
    eKit_AlloyCannon_Ghost,
    eKit_AlloyCannon_Titan,
    eKit_HeavyPlasma_Kevlar,
    eKit_HeavyPlasma_Skeleton,
    eKit_HeavyPlasma_Carapace,
    eKit_HeavyPlasma_Ghost,
    eKit_HeavyPlasma_Titan,
    eKit_PlasmaSniperRifle_Kevlar,
    eKit_PlasmaSniperRifle_Skeleton,
    eKit_PlasmaSniperRifle_Carapace,
    eKit_PlasmaSniperRifle_Ghost,
    eKit_PlasmaSniperRifle_Titan,
    eKit_LaserAssaultGun_Kevlar,
    eKit_LaserAssaultGun_Skeleton,
    eKit_LaserAssaultGun_Carapace,
    eKit_LaserAssaultGun_Ghost,
    eKit_LaserAssaultGun_Titan,
    eKit_Deco_Kevlar_START,
    eKit_Deco_Kevlar0,
    eKit_Deco_Kevlar1,
    eKit_Deco_Kevlar2,
    eKit_Deco_Kevlar3,
    eKit_Deco_Kevlar4,
    eKit_Deco_Kevlar5,
    eKit_Deco_Kevlar6,
    eKit_Deco_Kevlar7,
    eKit_Deco_Kevlar8,
    eKit_Deco_Kevlar9,
    eKit_Deco_Kevlar10,
    eKit_Deco_Kevlar11,
    eKit_Deco_Kevlar_END,
    eKit_Deco_Skeleton_START,
    eKit_Deco_Skeleton0,
    eKit_Deco_Skeleton1,
    eKit_Deco_Skeleton2,
    eKit_Deco_Skeleton3,
    eKit_Deco_Skeleton4,
    eKit_Deco_Skeleton5,
    eKit_Deco_Skeleton6,
    eKit_Deco_Skeleton7,
    eKit_Deco_Skeleton8,
    eKit_Deco_Skeleton9,
    eKit_Deco_Skeleton10,
    eKit_Deco_Skeleton11,
    eKit_Deco_Skeleton_END,
    eKit_Deco_Carapace_START,
    eKit_Deco_Carapace0,
    eKit_Deco_Carapace1,
    eKit_Deco_Carapace2,
    eKit_Deco_Carapace3,
    eKit_Deco_Carapace4,
    eKit_Deco_Carapace5,
    eKit_Deco_Carapace6,
    eKit_Deco_Carapace7,
    eKit_Deco_Carapace8,
    eKit_Deco_Carapace9,
    eKit_Deco_Carapace10,
    eKit_Deco_Carapace11,
    eKit_Deco_Carapace_END,
    eKit_Deco_Ghost_START,
    eKit_Deco_Ghost0,
    eKit_Deco_Ghost1,
    eKit_Deco_Ghost2,
    eKit_Deco_Ghost3,
    eKit_Deco_Ghost4,
    eKit_Deco_Ghost5,
    eKit_Deco_Ghost6,
    eKit_Deco_Ghost7,
    eKit_Deco_Ghost8,
    eKit_Deco_Ghost9,
    eKit_Deco_Ghost10,
    eKit_Deco_Ghost11,
    eKit_Deco_Ghost_END,
    eKit_Deco_Titan_START,
    eKit_Deco_Titan0,
    eKit_Deco_Titan1,
    eKit_Deco_Titan2,
    eKit_Deco_Titan3,
    eKit_Deco_Titan4,
    eKit_Deco_Titan5,
    eKit_Deco_Titan6,
    eKit_Deco_Titan7,
    eKit_Deco_Titan8,
    eKit_Deco_Titan9,
    eKit_Deco_Titan10,
    eKit_Deco_Titan11,
    eKit_Deco_Titan_END,
    eKit_Deco_Archangel_START,
    eKit_Deco_Archangel0,
    eKit_Deco_Archangel1,
    eKit_Deco_Archangel2,
    eKit_Deco_Archangel3,
    eKit_Deco_Archangel4,
    eKit_Deco_Archangel5,
    eKit_Deco_Archangel6,
    eKit_Deco_Archangel7,
    eKit_Deco_Archangel8,
    eKit_Deco_Archangel9,
    eKit_Deco_Archangel10,
    eKit_Deco_Archangel11,
    eKit_Deco_Archangel_END,
    eKit_Deco_Psi_START,
    eKit_Deco_Psi0,
    eKit_Deco_Psi1,
    eKit_Deco_Psi2,
    eKit_Deco_Psi3,
    eKit_Deco_Psi4,
    eKit_Deco_Psi5,
    eKit_Deco_Psi6,
    eKit_Deco_Psi7,
    eKit_Deco_Psi8,
    eKit_Deco_Psi9,
    eKit_Deco_Psi10,
    eKit_Deco_Psi11,
    eKit_Deco_Psi_END,
    eKit_MAX
};

enum EDiscState
{
    eDS_None,
    eDS_Good,
    eDS_Ready,
    eDS_Hidden,
    eDS_Bad,
    eDS_Red,
    eDS_ReactionAlien,
    eDS_ReactionHuman,
    eDS_AttackTarget,
    eDS_MAX
};

enum ECharacterSpeech
{
    eCharSpeech_Confirmed,
    eCharSpeech_HunkerDown,
    eCharSpeech_Reload,
    eCharSpeech_Overwatching,
    eCharSpeech_Moving,
    eCharSpeech_Dashing,
    eCharSpeech_JetPackMove,
    eCharSpeech_LowAmmo,
    eCharSpeech_OutOfAmmo,
    eCharSpeech_Suppressing,
    eCharSpeech_AreaSuppressing,
    eCharSpeech_PaintingTarget,
    eCharSpeech_DestroyingCover,
    eCharSpeech_FlushingTarget,
    eCharSpeech_HealingAlly,
    eCharSpeech_StabilizingAlly,
    eCharSpeech_RevivingAlly,
    eCharSpeech_CombatStim,
    eCharSpeech_PrimingGrenade,
    eCharSpeech_FragOut,
    eCharSpeech_SmokeGrenadeThrown,
    eCharSpeech_SpyGrenadeThrown,
    eCharSpeech_FlashbangThrown,
    eCharSpeech_FiringRocket,
    eCharSpeech_GhostModeActivated,
    eCharSpeech_GhostRevealed,
    eCharSpeech_JetPackDeactivated,
    eCharSpeech_ArcThrower,
    eCharSpeech_RepairSHIV,
    eCharSpeech_Kill,
    eCharSpeech_MultiKill,
    eCharSpeech_Missed,
    eCharSpeech_TargetSpotted,
    eCharSpeech_TargetSpottedHidden,
    eCharSpeech_HeardSomething,
    eCharSpeech_TakingFire,
    eCharSpeech_FriendlyKilled,
    eCharSpeech_Panic,
    eCharSpeech_PanickedBreathing,
    eCharSpeech_Wounded,
    eCharSpeech_Died,
    eCharSpeech_Flanked,
    eCharSpeech_Suppressed,
    eCharSpeech_Confused,
    eCharSpeech_PsiControlled,
    eCharSpeech_PsiControlling,
    eCharSpeech_PsiControllingFailed,
    eCharSpeech_PanickedTarget,
    eCharSpeech_PanickingTargetFailed,
    eCharSpeech_LootSpotted,
    eCharSpeech_LootCaptured,
    eCharSpeech_CivilianRescued,
    eCharSpeech_AlienRetreat,
    eCharSpeech_AlienMoving,
    eCharSpeech_AlienNotStunned,
    eCharSpeech_AlienReinforcements,
    eCharSpeech_AlienSighting,
    eCharSpeech_RunAndGun,
    eCharSpeech_SpreadShot,
    eCharSpeech_PrecisionShot,
    eCharSpeech_DisablingShot,
    eCharSpeech_Executioner,
    eCharSpeech_DoubleTap,
    eCharSpeech_InTheZone,
    eCharSpeech_ShredderRocket,
    eCharSpeech_HotPotato,
    eCharSpeech_PsionicsMindfray,
    eCharSpeech_PsionicsPanic,
    eCharSpeech_PsionicsInspiration,
    eCharSpeech_PsionicsTelekineticField,
    eCharSpeech_GrapplingHook,
    eCharSpeech_GainingElevation,
    eCharSpeech_GenericResponse,
    eCharSpeech_SoldierControlled,
    eCharSpeech_StunnedAlien,
    eCharSpeech_Explosion,
    eCharSpeech_RocketScatter,
    eCharSpeech_PsiRift,
    eCharSpeech_Poisoned,
    eCharSpeech_HiddenMovement,
    eCharSpeech_HiddenMovementVox,
    eCharSpeech_CriticallyWounded,
    eCharSpeech_COUNT,
    eCharSpeech_MAX
};

enum ECharacterVoice
{
    eCharVoice_Male_BEGIN,
    eCharVoice_MaleSoldier1,
    eCharVoice_MaleSoldier2,
    eCharVoice_MaleSoldier3,
    eCharVoice_MaleSoldier4,
    eCharVoice_MaleSoldier5,
    eCharVoice_MaleSoldier6,
    eCharVoice_MaleSoldier7,
    eCharVoice_MaleSoldier8,
    eCharVoice_MaleSoldier9,
    eCharVoice_Male_END,
    eCharVoice_Female_BEGIN,
    eCharVoice_FemaleSoldier1,
    eCharVoice_FemaleSoldier2,
    eCharVoice_FemaleSoldier3,
    eCharVoice_Female_END,
    eCharVoice_Brash_Male_BEGIN,
    eCharVoice_MaleSoldier1_Brash,
    eCharVoice_MaleSoldier2_Brash,
    eCharVoice_MaleSoldier3_Brash,
    eCharVoice_MaleSoldier4_Brash,
    eCharVoice_MaleSoldier5_Brash,
    eCharVoice_MaleSoldier6_Brash,
    eCharVoice_MaleSoldier7_Brash,
    eCharVoice_MaleSoldier8_Brash,
    eCharVoice_MaleSoldier9_Brash,
    eCharVoice_Brash_Male_END,
    eCharVoice_Brash_Female_BEGIN,
    eCharVoice_FemaleSoldier1_Brash,
    eCharVoice_FemaleSoldier2_Brash,
    eCharVoice_FemaleSoldier3_Brash,
    eCharVoice_Brash_Female_END,
    eCharVoice_Alien_BEGIN,
    eCharVoice_Sectoid,
    eCharVoice_Sectoid_Commander,
    eCharVoice_Floater,
    eCharVoice_Floater_Heavy,
    eCharVoice_Muton,
    eCharVoice_Muton_Elite,
    eCharVoice_Muton_Berserker,
    eCharVoice_ThinMan,
    eCharVoice_Elder,
    eCharVoice_CyberDisc,
    eCharVoice_Reaper,
    eCharVoice_Chryssalid,
    eCharVoice_Sectopod,
    eCharVoice_SectopodDrone,
    eCharVoice_Zombie,
    eCharVoice_Alien_END,
    eCharVoice_FemaleSoldier4,
    eCharVoice_FemaleSoldier5,
    eCharVoice_FemaleSoldier6,
    eCharVoice_MAX
};

enum ECharacterAttitude
{
    eAttitude_Professional,
    eAttitude_Brash,
    eAttitude_MAX
};

enum ETipTypes
{
    eTip_Tactical,
    eTip_Strategy,
    eTip_PC,
    eTip_Console,
    eTip_MP,
    eTip_MAX
};

enum EGameplayTips_Tactical
{
    eTTips_Flank,
    eTTips_Height,
    eTTips_Explosives,
    eTTips_OTS,
    eTTips_DashReact,
    eTTips_Medikit,
    eTTips_CriticalWound,
    eTTips_Noise,
    eTTips_Doors,
    eTTips_Pistol,
    eTTips_Pistol_II,
    eTTips_Cover,
    eTTips_Overwatch,
    eTTips_Overwatch_II,
    eTTips_Overwatch_III,
    eTTips_Outdoors,
    eTTips_Medikit_II,
    eTTips_Panic,
    eTTips_HeadDown,
    eTTips_Pistol_III,
    eTTips_EnemyAOE,
    eTTips_ArcThrower,
    eTTips_SHIV,
    eTTips_Flyers,
    eTTips_Melee,
    eTTips_Smoke,
    eTTips_Fire,
    eTTips_Hunker,
    eTTips_SniperRifles,
    eTTips_Suppression,
    eTTips_Health,
    eTTips_HealthII,
    eTTips_MAX
};

enum EGameplayTips_Strategy
{
    eSTips_Satellites,
    eSTips_Panic,
    eSTips_GreyMarket,
    eSTips_SatHunters,
    eSTips_Abductions,
    eSTips_Satellites_II,
    eSTips_OTS,
    eSTips_TerrorReward,
    eSTips_Uplink,
    eSTips_Adjacent,
    eSTips_Workshop,
    eSTips_Laboratory,
    eSTips_MAX
};

enum EGameplayTips_PC
{
    ePTips_RightClick,
    ePTips_Zoom,
    ePTips_MAX
};

enum EGameplayTips_Console
{
    eCTips_EndTurn,
    eCTips_Zoom,
    eCTips_MAX
};

enum EGameplayTips_MP
{
    eMTips_LessPointsFirstMove,
    eMTips_Bubonic,
    eMTips_MAX
};

enum ETicker_Narratives
{
    eTickerNarrative_UFOShotDown,
    eTickerNarrative_AlienCaptured,
    eTickerNarrative_CodeBroken,
    eTickerNarrative_BaseAssaulted,
    eTickerNarrative_PsiSoldier,
    eTickerNarrative_MAX
};

enum ETicker_Types
{
    eTicker_Invalid,
    eTicker_Ambient,
    eTicker_Panic,
    eTicker_Mission,
    eTicker_FundingCouncil,
    eTicker_Withdraw,
    eTicker_Narrative,
    eTicker_MAX
};

enum EAlienPodType
{
    ePodType_Soldier,
    ePodType_Commander,
    ePodType_Secondary,
    ePodType_Roaming,
    ePodType_MAX
};

enum EUnitVisibilityInformation
{
    eUVI_UNINITIALIZED,
    eUVI_NotVisibleBEGIN,
    eUVI_NotVisible_Default,
    eUVI_NotVisible_TargetOffBattlefield,
    eUVI_NotVisible_TargetIsGhost,
    eUVI_NotVisible_TargetOutOfRange,
    eUVI_NotVisibleEND,
    eUVI_VisibleBEGIN,
    eUVI_Visible_TargetForcedVisible,
    eUVI_Visible_SourcePeekForwardOverLedge_TargetDefault,
    eUVI_Visible_SourceDefault_TargetDefault,
    eUVI_Visible_SourceDefault_TargetPeekLeft0,
    eUVI_Visible_SourceDefault_TargetPeekRight0,
    eUVI_Visible_SourcePeekLeft_TargetDefault,
    eUVI_Visible_SourcePeekLeft_TargetPeekLeft0,
    eUVI_Visible_SourcePeekLeft_TargetPeekRight0,
    eUVI_Visible_SourcePeekRight_TargetDefault,
    eUVI_Visible_SourcePeekRight_TargetPeekLeft0,
    eUVI_Visible_SourcePeekRight_TargetPeekRight0,
    eUVI_VisibleEND,
    eUVI_MAX
};

enum EUnitVisibilityInformation_CoverPoint
{
    eUVICP_CoverPointA,
    eUVICP_CoverPointB,
    eUVICP_CoverPointC,
    eUVICP_CoverPointD,
    eUVICP_MAX
};

struct native TerrainMapping
{
    var XGGameData.ETerrainTypes eType;
    var string MapName;

    structdefaultproperties
    {
        eType=ETerrainTypes.eTerrain_Rock
        MapName=""
    }
};

struct native FacilityMapping
{
    var XGGameData.EFacilityType eType;
    var string MapName;
    var string strBinkReveal;

    structdefaultproperties
    {
        eType=EFacilityType.eFacility_None
        MapName=""
        strBinkReveal=""
    }
};

struct native TAlienPod
{
    var XGGameData.EAlienPodType eType;
    var XGGameData.ECharacter eMain;
    var XGGameData.ECharacter eSupport1;
    var XGGameData.ECharacter eSupport2;
    var XGGameData.EItemType eMainAltWeapon;
    var XGGameData.EItemType eSupport1AltWeapon;
    var XGGameData.EItemType eSupport2AltWeapon;

    structdefaultproperties
    {
        eType=EAlienPodType.ePodType_Soldier
        eMain=ECharacter.eChar_None
        eSupport1=ECharacter.eChar_None
        eSupport2=ECharacter.eChar_None
        eMainAltWeapon=EItemType.eItem_NONE
        eSupport1AltWeapon=EItemType.eItem_NONE
        eSupport2AltWeapon=EItemType.eItem_NONE
    }
};

struct native TAlienSquad
{
    var array<TAlienPod> arrPods;
    var int iNumDynamicAliens;

    structdefaultproperties
    {
        arrPods=none
        iNumDynamicAliens=0
    }
};

struct native CharacterPawnPair
{
    var XGGameData.ECharacter CharacterType;
    var XGGameData.EPawnType PawnType;
    var byte Padding[2];

    structdefaultproperties
    {
        CharacterType=ECharacter.eChar_None
        PawnType=EPawnType.ePawnType_None
        Padding[0]=0
        Padding[1]=0
    }
};



defaultproperties
{
    arrTerrainMapping(0)=(MapName="Addon_SolidRock")
    arrTerrainMapping(1)=(eType=ETerrainTypes.eTerrain_RockSteam,MapName="Addon_ThermalCave")
    arrTerrainMapping(2)=(eType=ETerrainTypes.eTerrain_Open,MapName="Addon_Cave")
    arrTerrainMapping(3)=(eType=ETerrainTypes.eTerrain_Excavated,MapName="Addon_Excavated")
    arrTerrainMapping(4)=(eType=ETerrainTypes.eTerrain_ExcavatedSteam,MapName="Addon_Excavated_Thermal")
    arrTerrainMapping(5)=(eType=ETerrainTypes.eTerrain_ExcavatedAccessLift,MapName="Addon_AccessLift_Excavated")
    arrFacilityMapping(0)=(eType=EFacilityType.eFacility_AccessLift,MapName="AddonDebug_AccessLift",strBinkReveal="TP_FacilityConstructed.bik")
    arrFacilityMapping(1)=(eType=EFacilityType.eFacility_ScienceLab,MapName="Addon_Laboratory",strBinkReveal="TP_F_Laboratory.bik")
    arrFacilityMapping(2)=(eType=EFacilityType.eFacility_Workshop,MapName="Addon_Workshop",strBinkReveal="TP_F_Workshop.bik")
    arrFacilityMapping(3)=(eType=EFacilityType.eFacility_SmallRadar,MapName="Addon_SmallRadar",strBinkReveal="TP_F_SmallRadar.bik")
    arrFacilityMapping(4)=(eType=EFacilityType.eFacility_Power,MapName="Addon_PowerGenerator",strBinkReveal="TP_F_PowerGenerator.bik")
    arrFacilityMapping(5)=(eType=EFacilityType.eFacility_Foundry,MapName="Addon_Foundry",strBinkReveal="TP_F_Foundry.bik")
    arrFacilityMapping(6)=(eType=EFacilityType.eFacility_OTS,MapName="Addon_OfficerTrainingSchool",strBinkReveal="TP_F_OTS.bik")
    arrFacilityMapping(7)=(eType=EFacilityType.eFacility_AlienContain,MapName="Addon_AlienContainment",strBinkReveal="TP_F_AlienContainment.bik")
    arrFacilityMapping(8)=(eType=EFacilityType.eFacility_LargeRadar,MapName="Addon_LargeRadar",strBinkReveal="TP_F_LargeRadar.bik")
    arrFacilityMapping(9)=(eType=EFacilityType.eFacility_HyperwaveRadar,MapName="Addon_HyperwaveRadar",strBinkReveal="TP_F_HyperwaveRadar.bik")
    arrFacilityMapping(10)=(eType=EFacilityType.eFacility_PsiLabs,MapName="Addon_PsionicLab",strBinkReveal="TP_F_PsionicLab.bik")
    arrFacilityMapping(11)=(eType=EFacilityType.eFacility_DeusEx,MapName="Addon_GollopChamber",strBinkReveal="TP_F_GollopChamber.bik")
    arrFacilityMapping(12)=(eType=EFacilityType.eFacility_ThermalPower,MapName="Addon_ThermalPower",strBinkReveal="TP_F_TermalPower.bik")
    arrFacilityMapping(13)=(eType=EFacilityType.eFacility_EleriumGenerator,MapName="Addon_EleriumPowerGenerator",strBinkReveal="TP_F_EleriumPower.bik")
    CharacterToPawnMap(0)=(CharacterType=ECharacter.eChar_Sectoid,PawnType=EPawnType.ePawnType_Sectoid)
    CharacterToPawnMap(1)=(CharacterType=ECharacter.eChar_SectoidCommander,PawnType=EPawnType.ePawnType_Sectoid_Commander)
    CharacterToPawnMap(2)=(CharacterType=ECharacter.eChar_Floater,PawnType=EPawnType.ePawnType_Floater)
    CharacterToPawnMap(3)=(CharacterType=ECharacter.eChar_FloaterHeavy,PawnType=EPawnType.ePawnType_Floater_Heavy)
    CharacterToPawnMap(4)=(CharacterType=ECharacter.eChar_Muton,PawnType=EPawnType.ePawnType_Muton)
    CharacterToPawnMap(5)=(CharacterType=ECharacter.eChar_MutonElite,PawnType=EPawnType.ePawnType_Muton_Elite)
    CharacterToPawnMap(6)=(CharacterType=ECharacter.eChar_MutonBerserker,PawnType=EPawnType.ePawnType_Muton_Berserker)
    CharacterToPawnMap(7)=(CharacterType=ECharacter.eChar_Thinman,PawnType=EPawnType.ePawnType_ThinMan)
    CharacterToPawnMap(8)=(CharacterType=ECharacter.eChar_Ethereal,PawnType=EPawnType.ePawnType_Elder)
    CharacterToPawnMap(9)=(CharacterType=ECharacter.eChar_EtherealUber,PawnType=EPawnType.ePawnType_EtherealUber)
    CharacterToPawnMap(10)=(CharacterType=ECharacter.eChar_Cyberdisc,PawnType=EPawnType.ePawnType_CyberDisc)
    CharacterToPawnMap(11)=(CharacterType=ECharacter.eChar_Chryssalid,PawnType=EPawnType.ePawnType_Chryssalid)
    CharacterToPawnMap(12)=(CharacterType=ECharacter.eChar_Sectopod,PawnType=EPawnType.ePawnType_Sectopod)
    CharacterToPawnMap(13)=(CharacterType=ECharacter.eChar_Drone,PawnType=EPawnType.ePawnType_SectopodDrone)
    CharacterToPawnMap(14)=(CharacterType=ECharacter.eChar_Zombie,PawnType=EPawnType.ePawnType_Zombie)
    CharacterToPawnMap(15)=(CharacterType=ECharacter.eChar_Outsider,PawnType=EPawnType.ePawnType_Outsider)
    CharacterToPawnMap(16)=(CharacterType=ECharacter.eChar_Soldier)
    CharacterToPawnMap(17)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Female_2_Skeleton)
    CharacterToPawnMap(18)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Female_3_Ghost)
    CharacterToPawnMap(19)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Female_1_Kevlar)
    CharacterToPawnMap(20)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Female_2_Carapace)
    CharacterToPawnMap(21)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Female_3_Titan)
    CharacterToPawnMap(22)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Female_3_Archangel)
    CharacterToPawnMap(23)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_FemalePsi)
    CharacterToPawnMap(24)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Male_2_Skeleton)
    CharacterToPawnMap(25)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Male_3_Ghost)
    CharacterToPawnMap(26)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Male_1_Kevlar)
    CharacterToPawnMap(27)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Male_2_Carapace)
    CharacterToPawnMap(28)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Male_3_Titan)
    CharacterToPawnMap(29)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_Male_3_Archangel)
    CharacterToPawnMap(30)=(CharacterType=ECharacter.eChar_Soldier,PawnType=EPawnType.ePawnType_MalePsi)
    CharacterToPawnMap(31)=(CharacterType=ECharacter.eChar_Tank,PawnType=EPawnType.ePawnType_Tank)
    CharacterToPawnMap(32)=(CharacterType=ECharacter.eChar_Tank,PawnType=EPawnType.ePawnType_Tank2)
    CharacterToPawnMap(33)=(CharacterType=ECharacter.eChar_Tank,PawnType=EPawnType.ePawnType_Tank3)
    CharacterToPawnMap(34)=(CharacterType=ECharacter.eChar_BattleScanner,PawnType=EPawnType.ePawnType_BattleScanner)
    CharacterToPawnMap(35)=(CharacterType=ECharacter.eChar_Civilian,PawnType=EPawnType.ePawnType_Civilian)
}