/*******************************************************************************
 * XComSoundManager generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class XComSoundManager extends Actor
    hidecategories(Navigation)
    notplaceable;

struct AmbientChannel
{
    var SoundCue Cue;
    var export editinline AudioComponent Component;
    var bool bHasPlayRequestPending;

    structdefaultproperties
    {
        Cue=none
        Component=none
        bHasPlayRequestPending=false
    }
};

protected function SetAmbientCue(out AmbientChannel Ambience, SoundCue NewCue)
{
    // End:0x16C
    if(NewCue != Ambience.Cue)
    {
        // End:0xDD
        if((Ambience.Component != none) && Ambience.Component.IsPlaying())
        {
            Ambience.Component.FadeOut(0.50, 0.0);
            Ambience.Component = none;
        }
        Ambience.Cue = NewCue;
        Ambience.Component = CreateAudioComponent(NewCue, false, true);
        // End:0x16C
        if(Ambience.bHasPlayRequestPending)
        {
            StartAmbience(Ambience);
        }
    }
    //return;    
}

protected function StartAmbience(out AmbientChannel Ambience, optional float FadeInTime)
{
    FadeInTime = 0.50;
    // End:0x4C
    if(Ambience.Cue == none)
    {
        Ambience.bHasPlayRequestPending = true;
        return;
    }
    // End:0x1B1
    if(((Ambience.Cue != none) && Ambience.Component != none) && !Ambience.Component.IsPlaying() || Ambience.Component.IsFadingOut())
    {
        Ambience.Component.bIsMusic = Ambience.Cue.SoundClass == 'Music';
        Ambience.Component.FadeIn(FadeInTime, 1.0);
    }
    //return;    
}

protected function StopAmbience(out AmbientChannel Ambience, optional float FadeOutTime)
{
    FadeOutTime = 1.0;
    Ambience.bHasPlayRequestPending = false;
    // End:0xC1
    if((Ambience.Component != none) && Ambience.Component.IsPlaying())
    {
        Ambience.Component.FadeOut(FadeOutTime, 0.0);
    }
    //return;    
}

function PlayMusic(SoundCue NewMusicCue, optional float FadeInTime)
{
    local MusicTrackStruct MusicTrack;

    FadeInTime = 0.0;
    MusicTrack.TheSoundCue = NewMusicCue;
    MusicTrack.FadeInTime = FadeInTime;
    MusicTrack.FadeOutTime = 1.0;
    MusicTrack.FadeInVolumeLevel = 1.0;
    MusicTrack.bAutoPlay = true;
    WorldInfo.UpdateMusicTrack(MusicTrack);
    //return;    
}

function StopMusic(optional float FadeOutTime)
{
    local MusicTrackStruct MusicTrack;

    FadeOutTime = 1.0;
    MusicTrack.TheSoundCue = none;
    WorldInfo.CurrentMusicTrack.FadeOutTime = FadeOutTime;
    WorldInfo.UpdateMusicTrack(MusicTrack);
    //return;    
}

function Init()
{
    //return;    
}
